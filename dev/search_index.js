var documenterSearchIndex = {"docs":
[{"location":"Sources/","page":"Sources","title":"Sources","text":"add_Se!(BG::BondGraph, name)\nadd_Se!(BG::BondGraph, Se, params::Vector{}, name)\nadd_Sf!(BG::BondGraph, name)\nadd_Sf!(BG::BondGraph, Sf, params::Vector{}, name)","category":"page"},{"location":"Sources/#BondGraphs.add_Se!-Tuple{BondGraph, Any}","page":"Sources","title":"BondGraphs.add_Se!","text":"Create a Symbolic/Constant Effort Input. Creates a system with parameters Se for the ODESystem.\n\n\n\n\n\n","category":"method"},{"location":"Sources/#BondGraphs.add_Se!-Tuple{BondGraph, Any, Vector, Any}","page":"Sources","title":"BondGraphs.add_Se!","text":"Create a nonlinear effort input with e = S_e(e f iv params) with name\n\n\n\n\n\n","category":"method"},{"location":"Sources/#BondGraphs.add_Sf!-Tuple{BondGraph, Any}","page":"Sources","title":"BondGraphs.add_Sf!","text":"Create a Symbolic/Constant Flow Input. Creates a system with parameters Sf for the ODESystem.\n\n\n\n\n\n","category":"method"},{"location":"Sources/#BondGraphs.add_Sf!-Tuple{BondGraph, Any, Vector, Any}","page":"Sources","title":"BondGraphs.add_Sf!","text":"Create a nonlinear flow input with f = S_f(e f iv params) with name\n\n\n\n\n\n","category":"method"},{"location":"Import_Export/","page":"I/O","title":"I/O","text":"get_graph(BG::BondGraph)\nsavebondgraph(fn::AbstractString, BG::BondGraph)\nloadbondgraph(fn::AbstractString, iv::Num)","category":"page"},{"location":"Import_Export/#BondGraphs.get_graph-Tuple{BondGraph}","page":"I/O","title":"BondGraphs.get_graph","text":"Remove Unecesary fields to only save the graph structure of the bond graph. Returns a graph with only the :name and :type defined for each node. \n\n\n\n\n\n","category":"method"},{"location":"Import_Export/#BondGraphs.savebondgraph-Tuple{AbstractString, BondGraph}","page":"I/O","title":"BondGraphs.savebondgraph","text":"Save the BondGraph to a .dot file for later analysis\n\n\n\n\n\n","category":"method"},{"location":"Import_Export/#BondGraphs.loadbondgraph-Tuple{AbstractString, Num}","page":"I/O","title":"BondGraphs.loadbondgraph","text":"Load and Create a BondGraph from a File and independent variable\n\n\n\n\n\n","category":"method"},{"location":"MultiPorts/","page":"Multi-Ports","title":"Multi-Ports","text":"add_C_multiport!(BG::BondGraph, elements, parameters, name; ϕi = (e, q, params, BG) -> [], ϕk = (e, q, params, BG) -> [])\nadd_I_multiport!(BG::BondGraph, elements, parameters, name; ϕi = (p, f, params) -> [], ϕk = (p, f, params) -> [])","category":"page"},{"location":"MultiPorts/#BondGraphs.add_C_multiport!-Tuple{BondGraph, Any, Any, Any}","page":"Multi-Ports","title":"BondGraphs.add_C_multiport!","text":"EXPERIMENTAL!! Create a multiport C-element. Currently only works for completely symbolic models. Needs work to be integrated with the generate model function\n\n\n\n\n\n","category":"method"},{"location":"MultiPorts/#BondGraphs.add_I_multiport!-Tuple{BondGraph, Any, Any, Any}","page":"Multi-Ports","title":"BondGraphs.add_I_multiport!","text":"EXPERIMENTAL!! Create a multiport I-element. Currently only works for completely symbolic models. Needs work to be integrated with the generate model function\n\n\n\n\n\n","category":"method"},{"location":"OnePorts/","page":"One Ports","title":"One Ports","text":"add_Bond!(BG::BondGraph, name)\nadd_R!(BG::BondGraph, name; causality = false)\nadd_R!(BG::BondGraph, Φr, ps, name; causality = false)\nadd_C!(BG::BondGraph, name; causality = false)\nadd_C!(BG::BondGraph, Φc, ps, name; causality = false)\nadd_I!(BG::BondGraph, name; causality = false)\nadd_I!(BG::BondGraph, Φi, ps, name; causality = false)\nadd_M!(BG::BondGraph, name; causality = false)\nadd_M!(BG::BondGraph, Φm, ps, name; causality = false)","category":"page"},{"location":"OnePorts/#BondGraphs.add_Bond!-Tuple{BondGraph, Any}","page":"One Ports","title":"BondGraphs.add_Bond!","text":"Create an Bond in a BondGraph to connect Junction->Junction, OnePort->TwoPort. It creates an empty bond to be a connector between elements. \n\n\n\n\n\n","category":"method"},{"location":"OnePorts/#BondGraphs.add_R!-Tuple{BondGraph, Any}","page":"One Ports","title":"BondGraphs.add_R!","text":"Create a Linear R-Element for the bondgraph. Causality will always be false for an R-element since it does not have a \"preferred\" causality. \n\n\n\n\n\n","category":"method"},{"location":"OnePorts/#BondGraphs.add_R!-Tuple{BondGraph, Any, Any, Any}","page":"One Ports","title":"BondGraphs.add_R!","text":"Create a nonlinear R-Element with Phi_r registered with modelingtoolkit.jl to prevent simplification through the nonlinear function. e = Phi_r(e f t ps). Params are for any parameters to the nonlinear function. \n\n\n\n\n\n","category":"method"},{"location":"OnePorts/#BondGraphs.add_C!-Tuple{BondGraph, Any}","page":"One Ports","title":"BondGraphs.add_C!","text":"Create a Linear C-Element for analysis. Setting Causality to true represents the elements being in derivative causality. \n\n\n\n\n\n","category":"method"},{"location":"OnePorts/#BondGraphs.add_C!-Tuple{BondGraph, Any, Any, Any}","page":"One Ports","title":"BondGraphs.add_C!","text":"Create a Nonlinear C-Element with e = phi_c(e f q t ps). Setting Causality to true represents the elements being in derivative causality. \n\n\n\n\n\n","category":"method"},{"location":"OnePorts/#BondGraphs.add_I!-Tuple{BondGraph, Any}","page":"One Ports","title":"BondGraphs.add_I!","text":"Create a Linear I-Element, setting the casuality to true signifies that the element is in derivative causality\n\n\n\n\n\n","category":"method"},{"location":"OnePorts/#BondGraphs.add_I!-Tuple{BondGraph, Any, Any, Any}","page":"One Ports","title":"BondGraphs.add_I!","text":"Create a Nonlinear I-Element with f = phi_I(e f p t ps). Setting Causality to true represents the elements being in derivative causality. \n\n\n\n\n\n","category":"method"},{"location":"OnePorts/#BondGraphs.add_M!-Tuple{BondGraph, Any}","page":"One Ports","title":"BondGraphs.add_M!","text":"Create a Linear M-element with causality being set to false. Derivative causality for M-elements is still under development. \n\n\n\n\n\n","category":"method"},{"location":"OnePorts/#BondGraphs.add_M!-Tuple{BondGraph, Any, Any, Any}","page":"One Ports","title":"BondGraphs.add_M!","text":"Create a Nonlinear M-Element with p = phi_M(e f p q t ps). Setting Causality to true represents the elements being in derivative causality. \n\n\n\n\n\n","category":"method"},{"location":"TransferFunctions/","page":"Transfer Functions","title":"Transfer Functions","text":"state_space(BG::BondGraph; ps = Dict{Any, Any}())","category":"page"},{"location":"TwoPorts/","page":"Two Ports","title":"Two Ports","text":"add_TF!(BG::BondGraph, m, in, out, name)\nadd_GY!(BG, r, in, out, name)\nadd_MTF!(BG::BondGraph, m, in, out, name)\nadd_MGY!(BG::BondGraph, r, in, out, name)","category":"page"},{"location":"TwoPorts/#BondGraphs.add_TF!-Tuple{BondGraph, Any, Any, Any, Any}","page":"Two Ports","title":"BondGraphs.add_TF!","text":"Add a linear transformer with modulus m, in element name in, out element name out, and named name.\n\n\n\n\n\n","category":"method"},{"location":"TwoPorts/#BondGraphs.add_MTF!-Tuple{BondGraph, Any, Any, Any, Any}","page":"Two Ports","title":"BondGraphs.add_MTF!","text":"Add a modulated transformer with modulus m, in element name in, out element name out, and named name.\n\n\n\n\n\n","category":"method"},{"location":"TwoPorts/#BondGraphs.add_MGY!-Tuple{BondGraph, Any, Any, Any, Any}","page":"Two Ports","title":"BondGraphs.add_MGY!","text":"Add a modulated gyrator with modulus r, in element name in, out element name out, and named name.\n\n\n\n\n\n","category":"method"},{"location":"BondGraphs/#BondGraphs!","page":"Bond Graphs","title":"BondGraphs!","text":"","category":"section"},{"location":"BondGraphs/","page":"Bond Graphs","title":"Bond Graphs","text":"Base.getindex(BG::BondGraph, node::Symbol)\nBase.getindex(BG::BondGraph, node::Int)\nBondGraph(independent_variable::Num)\nBondGraph(mg::AbstractMetaGraph, independent_variable::Num)\ngenerate_model!(BG::BondGraph)","category":"page"},{"location":"BondGraphs/#Base.getindex-Tuple{BondGraph, Symbol}","page":"Bond Graphs","title":"Base.getindex","text":"Get the ODE System Corresponding to the Specific Element\n\n\n\n\n\n","category":"method"},{"location":"BondGraphs/#Base.getindex-Tuple{BondGraph, Int64}","page":"Bond Graphs","title":"Base.getindex","text":"Get the system corresponding to Node - node\n\n\n\n\n\n","category":"method"},{"location":"BondGraphs/#BondGraphs.BondGraph-Tuple{Num}","page":"Bond Graphs","title":"BondGraphs.BondGraph","text":"Create an empty BondGraph to be populated during the analysis\n\n\n\n\n\n","category":"method"},{"location":"BondGraphs/#BondGraphs.BondGraph-Tuple{AbstractMetaGraph, Num}","page":"Bond Graphs","title":"BondGraphs.BondGraph","text":"Create a BondGraph provided a directed metagraph with node :name and :type defined for each node\n\n\n\n\n\n","category":"method"},{"location":"BondGraphs/#BondGraphs.generate_model!-Tuple{BondGraph}","page":"Bond Graphs","title":"BondGraphs.generate_model!","text":"Generate an ODE System from the BondGraph Structure\n\n\n\n\n\n","category":"method"},{"location":"Junctions/","page":"Junctions","title":"Junctions","text":"add_1J!(BG::BondGraph, elements::Dict{Symbol,Bool}, name::Symbol)\nadd_0J!(BG::BondGraph, elements::Dict{Symbol,Bool}, name::Symbol)","category":"page"},{"location":"Junctions/#BondGraphs.add_1J!-Tuple{BondGraph, Dict{Symbol, Bool}, Symbol}","page":"Junctions","title":"BondGraphs.add_1J!","text":"Add a 1-Junction to the bond graph, BG. The elements are specified with a dict of names and directions. true represents the element going \"in\" to the 1-junction. false represents the element going \"out\" from the 1-junction\n\n\n\n\n\n","category":"method"},{"location":"Junctions/#BondGraphs.add_0J!-Tuple{BondGraph, Dict{Symbol, Bool}, Symbol}","page":"Junctions","title":"BondGraphs.add_0J!","text":"Add a 0-Junction to the bond graph, BG. The elements are specified with a dict of names and directions. true represents the element going \"in\" to the 0-junction. false represents the element going \"out\" from the 0-junction\n\n\n\n\n\n","category":"method"}]
}
